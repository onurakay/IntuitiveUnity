%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 4595fed5c89e3a146a55851f479be2df, type: 3}
  m_Name: Question 3
  m_EditorClassIdentifier: 
  question: What is the main difference between a MonoBehaviour and a regular C#
    class in Unity?
  answers:
  - A MonoBehaviour can be attached to GameObjects and provides access to Unity-specific
    methods like Update and Start
  - A regular C# class can only be used for data storage and does not interact with
    the Unity engine
  - A MonoBehaviour is a base class for all Unity scripts and has additional functionalities
    specific to Unity's lifecycle and events
  - A regular C# class is used exclusively for handling UI elements in Unity
  correctAnswerIndex: 2
